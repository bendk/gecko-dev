// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

#ifndef mozilla_dom_SpritesScaffolding_h
#define mozilla_dom_SpritesScaffolding_h

#include "mozilla/ErrorResult.h"
#include "mozilla/dom/RootedDictionary.h"
#include "mozilla/dom/ScaffoldingConverter.h"
#include "mozilla/dom/TypedArray.h"
#include "mozilla/dom/UniFFIBinding.h"
#include "mozilla/dom/UniFFIPointer.h"
#include "mozilla/dom/UniFFIPointerType.h"
#include "mozilla/dom/UniFFIRust.h"


namespace mozilla::dom {

// Scaffolding functions from UniFFI
extern "C" {
  void ffi_sprites_ff2d_Sprite_object_free(void *, RustCallStatus*);
  
  void * sprites_ff2d_Sprite_new(RustBuffer, RustCallStatus*);
  
  void * sprites_ff2d_Sprite_new_relative_to(RustBuffer, RustBuffer, RustCallStatus*);
  
  RustBuffer sprites_ff2d_Sprite_get_position(void *, RustCallStatus*);
  
  void sprites_ff2d_Sprite_move_to(void *, RustBuffer, RustCallStatus*);
  
  void sprites_ff2d_Sprite_move_by(void *, RustBuffer, RustCallStatus*);
  
  RustBuffer sprites_ff2d_translate(RustBuffer, RustBuffer, RustCallStatus*);
  
}

class GlobalObject;
// UniFFIPointerType subclass for this pointer type
class SpritePointerType : public UniFFIPointerType {
    public:
        static SpritePointerType& getInstance() {
            static SpritePointerType instance;
            return instance;
        }
    private:
    SpritePointerType() {
            typeName = "uniffi::spritesSprite"_ns;
            destructor = ffi_sprites_ff2d_Sprite_object_free;
        }
};

class SpritesScaffolding {
  public:
  static already_AddRefed<Promise> FfiSpritesFf2dSpriteObjectFree(
          const GlobalObject& aUniFFIGlobal,
          const Sequence<ScaffoldingType>& aArgs,
          ErrorResult& aUniFFIErrorResult);
  static already_AddRefed<Promise> SpritesFf2dSpriteNew(
          const GlobalObject& aUniFFIGlobal,
          const Sequence<ScaffoldingType>& aArgs,
          ErrorResult& aUniFFIErrorResult);
  static already_AddRefed<Promise> SpritesFf2dSpriteNewRelativeTo(
          const GlobalObject& aUniFFIGlobal,
          const Sequence<ScaffoldingType>& aArgs,
          ErrorResult& aUniFFIErrorResult);
  static already_AddRefed<Promise> SpritesFf2dSpriteGetPosition(
          const GlobalObject& aUniFFIGlobal,
          const Sequence<ScaffoldingType>& aArgs,
          ErrorResult& aUniFFIErrorResult);
  static already_AddRefed<Promise> SpritesFf2dSpriteMoveTo(
          const GlobalObject& aUniFFIGlobal,
          const Sequence<ScaffoldingType>& aArgs,
          ErrorResult& aUniFFIErrorResult);
  static already_AddRefed<Promise> SpritesFf2dSpriteMoveBy(
          const GlobalObject& aUniFFIGlobal,
          const Sequence<ScaffoldingType>& aArgs,
          ErrorResult& aUniFFIErrorResult);
  static already_AddRefed<Promise> SpritesFf2dTranslate(
          const GlobalObject& aUniFFIGlobal,
          const Sequence<ScaffoldingType>& aArgs,
          ErrorResult& aUniFFIErrorResult);

  static already_AddRefed<UniFFIPointer> ReadPointerSprite(const GlobalObject& aUniFFIGlobal, const ArrayBuffer& aArrayBuff, long position);
  static void WritePointerSprite(const GlobalObject& aUniFFIGlobal, const UniFFIPointer& ptr, const ArrayBuffer& buff, long position, ErrorResult& aError);

  
};

}  // namespace mozilla::dom

#endif  // mozilla_dom_SpritesScaffolding_h