// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

#include "mozilla/dom/SpritesScaffolding.h"
#include "mozilla/dom/ScaffoldingCall.h"

class OwnedRustBuffer;
class Promise;
class nsIGlobalObject;

namespace mozilla::dom {
already_AddRefed<Promise> SpritesScaffolding::FfiSpritesFf2dSpriteObjectFree(const GlobalObject& aGlobal,
        const Sequence<ScaffoldingType>& aArgs,
        ErrorResult& aError) {
    return ScaffoldingCallHandler<ScaffoldingConverter<void>, ScaffoldingConverter<SpritePointerType, ScaffoldingConverterTagObject>>::CallAsync(ffi_sprites_ff2d_Sprite_object_free, aGlobal, aArgs, "SpritesScaffolding::FfiSpritesFf2dSpriteObjectFree", aError);
}
already_AddRefed<Promise> SpritesScaffolding::SpritesFf2dSpriteNew(const GlobalObject& aGlobal,
        const Sequence<ScaffoldingType>& aArgs,
        ErrorResult& aError) {
    return ScaffoldingCallHandler<ScaffoldingConverter<SpritePointerType, ScaffoldingConverterTagObject>, ScaffoldingConverter<RustBuffer>>::CallAsync(sprites_ff2d_Sprite_new, aGlobal, aArgs, "SpritesScaffolding::SpritesFf2dSpriteNew", aError);
}
already_AddRefed<Promise> SpritesScaffolding::SpritesFf2dSpriteNewRelativeTo(const GlobalObject& aGlobal,
        const Sequence<ScaffoldingType>& aArgs,
        ErrorResult& aError) {
    return ScaffoldingCallHandler<ScaffoldingConverter<SpritePointerType, ScaffoldingConverterTagObject>, ScaffoldingConverter<RustBuffer>, ScaffoldingConverter<RustBuffer>>::CallAsync(sprites_ff2d_Sprite_new_relative_to, aGlobal, aArgs, "SpritesScaffolding::SpritesFf2dSpriteNewRelativeTo", aError);
}
already_AddRefed<Promise> SpritesScaffolding::SpritesFf2dSpriteGetPosition(const GlobalObject& aGlobal,
        const Sequence<ScaffoldingType>& aArgs,
        ErrorResult& aError) {
    return ScaffoldingCallHandler<ScaffoldingConverter<RustBuffer>, ScaffoldingConverter<SpritePointerType, ScaffoldingConverterTagObject>>::CallAsync(sprites_ff2d_Sprite_get_position, aGlobal, aArgs, "SpritesScaffolding::SpritesFf2dSpriteGetPosition", aError);
}
already_AddRefed<Promise> SpritesScaffolding::SpritesFf2dSpriteMoveTo(const GlobalObject& aGlobal,
        const Sequence<ScaffoldingType>& aArgs,
        ErrorResult& aError) {
    return ScaffoldingCallHandler<ScaffoldingConverter<void>, ScaffoldingConverter<SpritePointerType, ScaffoldingConverterTagObject>, ScaffoldingConverter<RustBuffer>>::CallAsync(sprites_ff2d_Sprite_move_to, aGlobal, aArgs, "SpritesScaffolding::SpritesFf2dSpriteMoveTo", aError);
}
already_AddRefed<Promise> SpritesScaffolding::SpritesFf2dSpriteMoveBy(const GlobalObject& aGlobal,
        const Sequence<ScaffoldingType>& aArgs,
        ErrorResult& aError) {
    return ScaffoldingCallHandler<ScaffoldingConverter<void>, ScaffoldingConverter<SpritePointerType, ScaffoldingConverterTagObject>, ScaffoldingConverter<RustBuffer>>::CallAsync(sprites_ff2d_Sprite_move_by, aGlobal, aArgs, "SpritesScaffolding::SpritesFf2dSpriteMoveBy", aError);
}
already_AddRefed<Promise> SpritesScaffolding::SpritesFf2dTranslate(const GlobalObject& aGlobal,
        const Sequence<ScaffoldingType>& aArgs,
        ErrorResult& aError) {
    return ScaffoldingCallHandler<ScaffoldingConverter<RustBuffer>, ScaffoldingConverter<RustBuffer>, ScaffoldingConverter<RustBuffer>>::CallAsync(sprites_ff2d_translate, aGlobal, aArgs, "SpritesScaffolding::SpritesFf2dTranslate", aError);
}
  already_AddRefed<UniFFIPointer> SpritesScaffolding::ReadPointerSprite(const GlobalObject& aUniFFIGlobal, const ArrayBuffer& aArrayBuff, long aPosition) {
      return UniFFIPointer::Read(aArrayBuff, aPosition, &SpritePointerType::getInstance());
  }
  void SpritesScaffolding::WritePointerSprite(const GlobalObject& aUniFFIGlobal, const UniFFIPointer& aPtr, const ArrayBuffer& aArrayBuff, long aPosition, ErrorResult& aError) {
      aPtr.Write(aArrayBuff, aPosition, &SpritePointerType::getInstance(), aError);
  }

  
}  // namespace mozilla::dom