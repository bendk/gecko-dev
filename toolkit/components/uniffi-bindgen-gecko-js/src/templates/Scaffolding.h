// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

#ifndef mozilla_dom_{{ ci.scaffolding_class() }}_h
#define mozilla_dom_{{ ci.scaffolding_class() }}_h

#include "mozilla/ErrorResult.h"
#include "mozilla/dom/RootedDictionary.h"
#include "mozilla/dom/TypedArray.h"
#include "mozilla/dom/UniFFIRustCallResultBinding.h"
#include "mozilla/dom/UniFFIPointer.h"
#include "mozilla/dom/UniFFIPointerType.h"
#include "UniFFI.h"

// Scaffolding functions from UniFFI
extern "C" {
{%- for func in ci.iter_user_ffi_function_definitions() %}
{{ func.rust_return_type() }} {{ func.rust_name() }}({{ func.rust_arg_list() }});
{% endfor %}
}

namespace mozilla::dom {

class GlobalObject;

{%- for object in ci.object_definitions() %}
class {{ object.nm() }}PointerType : public UniFFIPointerType {
    public:
        static {{ object.nm() }}PointerType& getInstance() {
            static {{ object.nm() }}PointerType instance;
            return instance;
        }
    private:
        {{ object.nm() }}PointerType() {
            typeName = u"{{ ci.cpp_namespace() }}{{ object.nm() }}"_ns;
            destructor = {{ object.ffi_object_free().rust_name() }};
        }
};
{% endfor -%}

class {{ ci.scaffolding_class() }} {
  public:
  {%- for func in ci.iter_user_ffi_function_definitions() %}

  {%- if func.is_async() %}
  static already_AddRefed<Promise> {{ func.nm() }}(const GlobalObject& aUniFFIGlobal,
  {%- if func.has_args() %}{{ func.input_arg_list() }},{%- else %}{%- endif %}
  ErrorResult& aUniFFIErrorResult);
  {%- else %}
  static void {{ func.nm() }}(const GlobalObject& aUniFFIGlobal,
   {%- if func.has_args() %}{{ func.input_arg_list() }},{%- else %}{%- endif %}
  RootedDictionary<UniFFIRustCallResult>& aUniFFIReturnValue, ErrorResult& aUniFFIErrorResult);
  {%- endif %}
  {%- endfor %}


  {%- for object in ci.object_definitions() %}

  static already_AddRefed<UniFFIPointer> ReadPointer{{ object.nm() }}(const GlobalObject& aUniFFIGlobal, const ArrayBuffer& aArrayBuff, long position);
  static void WritePointer{{ object.nm() }}(const GlobalObject& aUniFFIGlobal, const UniFFIPointer& ptr, const ArrayBuffer& buff, long position);

  {% endfor %}
};

}  // namespace mozilla::dom

#endif  // mozilla_dom_{{ ci.scaffolding_class() }}_h
