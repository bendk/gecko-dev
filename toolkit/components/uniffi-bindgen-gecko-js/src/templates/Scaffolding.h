// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

#ifndef mozilla_dom_{{ ci.scaffolding_name() }}_h
#define mozilla_dom_{{ ci.scaffolding_name() }}_h

#include "mozilla/ErrorResult.h"
#include "mozilla/dom/RootedDictionary.h"
#include "mozilla/dom/TypedArray.h"
#include "mozilla/dom/UniFFIRustCallResultBinding.h"
#include "UniFFI.h"

// Scaffolding functions from UniFFI
extern "C" {
{%- for func in ci.iter_user_ffi_function_definitions() %}
{{ func.rust_return_type() }} {{ func.rust_name() }}({{ func.rust_arg_list() }});
{% endfor %}
}

namespace mozilla::dom {

class GlobalObject;

class {{ ci.cpp_class_name() }} {
  public:
  {%- for func in ci.iter_user_ffi_function_definitions() %}

  {%- if func.is_async() %}
  static already_AddRefed<Promise> {{ func.cpp_name() }}(const GlobalObject& aUniFFIGlobal, {{ func.cpp_input_arg_list() }}, ErrorResult& aUniFFIErrorResult);
  {%- else %}
  static void {{ func.cpp_name() }}(const GlobalObject& aUniFFIGlobal, {{ func.cpp_input_arg_list() }}, RootedDictionary<UniFFIRustCallResult>& aUniFFIReturnValue, ErrorResult& aUniFFIErrorResult);
  {%- endif %}
  {%- endfor %}
};

}  // namespace mozilla::dom

#endif  // mozilla_dom_{{ ci.scaffolding_name() }}_h
