// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

#include "mozilla/dom/GeometryScaffolding.h"
#include "mozilla/dom/OwnedRustBuffer.h"

namespace mozilla::dom {

double GeometryScaffolding::GeometryEb69Gradient(const GlobalObject& aGlobal, const ArrayBuffer& ln, UniFFIRustCallStatus& status, ErrorResult& aErrorResult) {
  ln.ComputeState();
  OwnedRustBuffer lnConverted(ln, aErrorResult);
  if (!lnConverted.isValid()) {
    return 0;
  }

  // Call the Rust function
  RustCallStatus callStatus = {};
  double rustResult = geometry_eb69_gradient(
    lnConverted.intoRustBuffer(),
    &callStatus);
  status.update(callStatus);
  // Return the result directly
  return rustResult;
}

void GeometryScaffolding::GeometryEb69Intersection(const GlobalObject& aGlobal, const ArrayBuffer& ln1, const ArrayBuffer& ln2, UniFFIRustCallStatus& status, JS::MutableHandle<JSObject*> aRetVal, ErrorResult& aErrorResult) {
  ln1.ComputeState();
  OwnedRustBuffer ln1Converted(ln1, aErrorResult);
  if (!ln1Converted.isValid()) {
    return;
  }
  ln2.ComputeState();
  OwnedRustBuffer ln2Converted(ln2, aErrorResult);
  if (!ln2Converted.isValid()) {
    return;
  }

  // Call the Rust function
  RustCallStatus callStatus = {};
  RustBuffer rustResult = geometry_eb69_intersection(
    ln1Converted.intoRustBuffer(),
    ln2Converted.intoRustBuffer(),
    &callStatus);
  status.update(callStatus);
  // Convert result RustBuffer into an ArrayBuffer and set the out param
  aRetVal.set(JS::RootedObject(
    aGlobal.Context(),
    OwnedRustBuffer(rustResult).intoArrayBuffer(aGlobal.Context())));
}

}  // namespace mozilla::dom