// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

#include "mozilla/dom/GeometryScaffolding.h"
#include "mozilla/dom/OwnedRustBuffer.h"

namespace mozilla::dom {

void GeometryScaffolding::GeometryEb69Gradient(const GlobalObject& aUniFFIGlobal, const ArrayBuffer& ln, RootedDictionary<UniFFIRustCallResult>& aUniFFIReturnValue, ErrorResult& aUniFFIErrorResult) {
  ln.ComputeState();
  OwnedRustBuffer lnConverted(ln, aUniFFIErrorResult);
  if (aUniFFIErrorResult.Failed()) {
      return;
  }

  // Call the Rust function
  RustCallStatus callStatus = {};
  double rustResult = geometry_eb69_gradient(
    lnConverted.intoRustBuffer(),
    &callStatus);

  aUniFFIReturnValue.mCode = callStatus.code;
  if (callStatus.code == uniffi::CALL_SUCCESS) {
      // All other return values (ints, floats, pointers) are handled as a JS number value
      aUniFFIReturnValue.mData.setNumber(rustResult);
  }
}

void GeometryScaffolding::GeometryEb69Intersection(const GlobalObject& aUniFFIGlobal, const ArrayBuffer& ln1, const ArrayBuffer& ln2, RootedDictionary<UniFFIRustCallResult>& aUniFFIReturnValue, ErrorResult& aUniFFIErrorResult) {
  ln1.ComputeState();
  OwnedRustBuffer ln1Converted(ln1, aUniFFIErrorResult);
  if (aUniFFIErrorResult.Failed()) {
      return;
  }
  ln2.ComputeState();
  OwnedRustBuffer ln2Converted(ln2, aUniFFIErrorResult);
  if (aUniFFIErrorResult.Failed()) {
      return;
  }

  // Call the Rust function
  RustCallStatus callStatus = {};
  RustBuffer rustResult = geometry_eb69_intersection(
    ln1Converted.intoRustBuffer(),
    ln2Converted.intoRustBuffer(),
    &callStatus);

  aUniFFIReturnValue.mCode = callStatus.code;
  if (callStatus.code == uniffi::CALL_SUCCESS) {
      // Convert result RustBuffer into an ArrayBuffer and set the data field
      aUniFFIReturnValue.mData.setObjectOrNull(
        OwnedRustBuffer(rustResult).intoArrayBuffer(aUniFFIGlobal.Context())
       );
  }
}

}  // namespace mozilla::dom