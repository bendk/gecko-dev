
namespace geometry {
  double gradient(Line ln);
  Point? intersection(Line ln1, Line ln2);

  string string_round(string s);

  Point string_record_round(Point p);

  sequence<string> arr_round(sequence<string> arr, u32 size);

  record<DOMString, string> map_round(record<DOMString, string> map, u32 size);

  ExampleEnum enum_round(ExampleEnum e);

  ComplexEnum complex_enum_round(ComplexEnum ce);
};

enum ExampleEnum {
  "V1",
  "V2",
};

[Enum]
interface ComplexEnum {
  V1(string s, u32 num);
  V2(string s, f64 num);
};

dictionary Point {
  double coord_x;
  double coord_y;
  string description;
};

dictionary Line {
  Point start;
  Point end;
};
