// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

[ChromeOnly, Exposed=Window]
namespace RondpointScaffolding {
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpoint9336RetourneurObjectFree(any ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueI8(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueU8(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueI16(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueU16(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueI32(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueU32(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueI64(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueU64(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueFloat(any ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueDouble(any ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueBoolean(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueString(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueNombresSignes(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueNombres(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336RetourneurIdentiqueOptionneurDictionnaire(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpoint9336StringifierObjectFree(any ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierWellKnownString(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringI8(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringU8(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringI16(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringU16(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringI32(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringU32(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringI64(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringU64(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringFloat(any ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringDouble(any ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336StringifierToStringBoolean(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpoint9336OptionneurObjectFree(any ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonBoolean(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonString(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonSequence(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonNull(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonZero(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU8Dec(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI8Dec(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU16Dec(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI16Dec(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU32Dec(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI32Dec(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU64Dec(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI64Dec(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU8Hex(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI8Hex(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU16Hex(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI16Hex(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU32Hex(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI32Hex(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU64Hex(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonI64Hex(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonU32Oct(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonF32(any ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonF64(any ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336OptionneurSinonEnum(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336CopieDictionnaire(ArrayBuffer d);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336CopieEnumeration(ArrayBuffer e);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336CopieEnumerations(ArrayBuffer e);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336CopieCarte(ArrayBuffer c);
  [Throws]
  Promise<UniFFIRustCallResult> rondpoint9336Switcheroo(byte b);
};