// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

[ChromeOnly, Exposed=Window]
namespace RondpointScaffolding {
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpointC728RetourneurObjectFree(long long ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI8(long long ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU8(long long ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI16(long long ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU16(long long ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI32(long long ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU32(long long ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI64(long long ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU64(long long ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueFloat(long long ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueDouble(long long ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueBoolean(long long ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueString(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueNombresSignes(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueNombres(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueOptionneurDictionnaire(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpointC728StringifierObjectFree(long long ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierWellKnownString(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI8(long long ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU8(long long ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI16(long long ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU16(long long ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI32(long long ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU32(long long ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI64(long long ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU64(long long ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringFloat(long long ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringDouble(long long ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringBoolean(long long ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpointC728OptionneurObjectFree(long long ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonBoolean(long long ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonString(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonSequence(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonNull(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonZero(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU8Dec(long long ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI8Dec(long long ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU16Dec(long long ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI16Dec(long long ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU32Dec(long long ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI32Dec(long long ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU64Dec(long long ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI64Dec(long long ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU8Hex(long long ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI8Hex(long long ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU16Hex(long long ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI16Hex(long long ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU32Hex(long long ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI32Hex(long long ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU64Hex(long long ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI64Hex(long long ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU32Oct(long long ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonF32(long long ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonF64(long long ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonEnum(long long ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieDictionnaire(ArrayBuffer d);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieEnumeration(ArrayBuffer e);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieEnumerations(ArrayBuffer e);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieCarte(ArrayBuffer c);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728Switcheroo(byte b);
};