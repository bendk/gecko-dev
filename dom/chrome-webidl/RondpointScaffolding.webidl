// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

[ChromeOnly, Exposed=Window]
namespace RondpointScaffolding {
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpointC728RetourneurObjectFree(any ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI8(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU8(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI16(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU16(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI32(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU32(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueI64(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueU64(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueFloat(any ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueDouble(any ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueBoolean(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueString(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueNombresSignes(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueNombres(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728RetourneurIdentiqueOptionneurDictionnaire(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpointC728StringifierObjectFree(any ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierWellKnownString(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI8(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU8(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI16(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU16(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI32(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU32(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringI64(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringU64(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringFloat(any ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringDouble(any ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728StringifierToStringBoolean(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> ffiRondpointC728OptionneurObjectFree(any ptr);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurNew();
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonBoolean(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonString(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonSequence(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonNull(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonZero(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU8Dec(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI8Dec(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU16Dec(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI16Dec(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU32Dec(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI32Dec(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU64Dec(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI64Dec(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU8Hex(any ptr, octet value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI8Hex(any ptr, byte value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU16Hex(any ptr, unsigned short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI16Hex(any ptr, short value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU32Hex(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI32Hex(any ptr, long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU64Hex(any ptr, unsigned long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonI64Hex(any ptr, long long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonU32Oct(any ptr, unsigned long value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonF32(any ptr, float value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonF64(any ptr, double value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728OptionneurSinonEnum(any ptr, ArrayBuffer value);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieDictionnaire(ArrayBuffer d);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieEnumeration(ArrayBuffer e);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieEnumerations(ArrayBuffer e);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728CopieCarte(ArrayBuffer c);
  [Throws]
  Promise<UniFFIRustCallResult> rondpointC728Switcheroo(byte b);
};