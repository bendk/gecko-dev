// This file was autogenerated by some hot garbage in the `uniffi-bindgen-gecko-js` crate.
// Trust me, you don't want to mess with it!

[ChromeOnly, Exposed=Window]
namespace RondpointScaffolding {
  [Throws]
  Promise<UniFFIScaffoldingCallResult> ffiRondpoint9336RetourneurObjectFree(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurNew(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueI8(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueU8(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueI16(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueU16(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueI32(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueU32(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueI64(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueU64(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueFloat(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueDouble(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueBoolean(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueString(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueNombresSignes(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueNombres(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336RetourneurIdentiqueOptionneurDictionnaire(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> ffiRondpoint9336StringifierObjectFree(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierNew(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierWellKnownString(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringI8(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringU8(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringI16(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringU16(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringI32(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringU32(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringI64(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringU64(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringFloat(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringDouble(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336StringifierToStringBoolean(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> ffiRondpoint9336OptionneurObjectFree(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurNew(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonBoolean(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonString(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonSequence(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonNull(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonZero(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU8Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI8Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU16Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI16Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU32Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI32Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU64Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI64Dec(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU8Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI8Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU16Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI16Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU32Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI32Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU64Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonI64Hex(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonU32Oct(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonF32(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonF64(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336OptionneurSinonEnum(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336CopieDictionnaire(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336CopieEnumeration(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336CopieEnumerations(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336CopieCarte(UniFFIScaffoldingType... args);
  [Throws]
  Promise<UniFFIScaffoldingCallResult> rondpoint9336Switcheroo(UniFFIScaffoldingType... args);

UniFFIPointer readPointerRetourneur(ArrayBuffer buff, long position);
[Throws]
void writePointerRetourneur(UniFFIPointer ptr, ArrayBuffer buff, long position);



UniFFIPointer readPointerStringifier(ArrayBuffer buff, long position);
[Throws]
void writePointerStringifier(UniFFIPointer ptr, ArrayBuffer buff, long position);



UniFFIPointer readPointerOptionneur(ArrayBuffer buff, long position);
[Throws]
void writePointerOptionneur(UniFFIPointer ptr, ArrayBuffer buff, long position);


};